#
# ofilangi
#
#  DOCKER_CONTEXT is a context global env variable for all application github p2m2 organization
#   - DOCKER_USER          -> login
#   - DOCKER_PASS          -> password
#   - ORGANIZATION_NAME    -> organization register on dockerhub
#
version: 2.1
workflows:
  docker-publication-workflow:
    jobs:
      # build Js lib
      - build_js:
          context:
            - DOCKER_CONTEXT
          filters:
            tags:
              only: /.*/
            branches:
              only:
                - develop
                - update_discovery_0.0.4
      # only develop is build and push on dockerhub !
      - build_branch:
          requires:
            - build_js
          context:
            - DOCKER_CONTEXT
          filters:
            tags:
              ignore: /.*/
            branches:
              only:
                - develop
                - update_discovery_0.0.4

      # all tags are build and push on dockerhub !
      - build_tag_latest:
          requires:
            - build_js
          context:
            - DOCKER_CONTEXT
          filters:
            tags:
              only: /.*/
            branches:
              # nothing coming from branch are deployed as latest
              ignore: /.*/

executors:
  docker-publisher:
    docker:
      - image: circleci/buildpack-deps:stretch
        auth:
          username: ${DOCKER_USER}
          password: ${DOCKER_PASS}
    working_directory: ~/repo

jobs:
  build_js:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
        auth:
          username: ${DOCKER_USER}
          password: ${DOCKER_PASS}
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
      NVS_VERSION: 1.2.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install nvs - node - npm - compile fullOptJS::webpack
          command: |
            git clone --branch v$NVS_VERSION --depth 1 https://github.com/jasongin/nvs ~/.nvs
            . ~/.nvs/nvs.sh
            nvs --version
            nvs add latest
            nvs use latest
            node --version
            npm --version
            sbt fullOptJS::webpack
            chmod 644 ./target/scala-2.13/scalajs-bundler/main/table-opt-bundle.js
      - persist_to_workspace:
          root: ./target/scala-2.13/scalajs-bundler/main/
          paths:
            - table-opt-bundle.js


  build_branch:
    executor: docker-publisher

    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/repo/target/scala-2.13/scalajs-bundler/main/
      - run:
          name: Publish Docker Image to Docker Hub
          # publication of <application>:<application_branch>
          command: |
             IMAGE_NAME=${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BRANCH}

             docker build -t ${ORGANIZATION_NAME}/${IMAGE_NAME} .
             echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin
             docker push ${ORGANIZATION_NAME}/${IMAGE_NAME}

  build_tag_latest:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/repo/target/scala-2.13/scalajs-bundler/main/
      - run:
          name: Publish Docker Tag to Docker Hub
          # publication of <application>:<application_tag>
          command: |
            IMAGE_NAME=${CIRCLE_PROJECT_REPONAME}:${CIRCLE_TAG}
            IMAGE_NAME_LATEST=${CIRCLE_PROJECT_REPONAME}:latest

            docker build -t ${ORGANIZATION_NAME}/${IMAGE_NAME} .
            docker build -t ${ORGANIZATION_NAME}/${IMAGE_NAME_LATEST} .

            echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin
            docker push ${ORGANIZATION_NAME}/${IMAGE_NAME}
            docker push ${ORGANIZATION_NAME}/${IMAGE_NAME_LATEST}
